log4j.rootLogger = debug, MyConsole, MyFileDebug, MyFileError

# 配置控制台输出
log4j.appender.MyConsole = org.apache.log4j.ConsoleAppender
# 使用System.out 输出（以信息的形式，黑色字体），还可以使用System.err（以报错的方式，红色字体）
log4j.appender.MyConsole.Target = System.out
log4j.appender.MyConsole.layout = org.apache.log4j.PatternLayout
log4j.appender.MyConsole.layout.ConversionPattern = %d{ yyyy-MM-dd HH:mm:ss} [%p]:%c: %m%n

# 配置输出到文件
# 每天产生一个日志文件
log4j.appender.MyFileDebug = org.apache.log4j.DailyRollingFileAppender
# 输出位置
log4j.appender.MyFileDebug.File = ${user.home}/logs/app.log
# 是否追加到文件
log4j.appender.MyFileDebug.Append = true
# 输出等级
log4j.appender.MyFileDebug.Threshold = INFO
log4j.appender.MyFileDebug.layout = org.apache.log4j.PatternLayout
log4j.appender.MyFileDebug.layout.ConversionPattern = %d{ yyyy-MM-dd HH:mm:ss} [%p]:%c: %m%n

# 配置输出到文件
# 每天产生一个日志文件
log4j.appender.MyFileError = org.apache.log4j.DailyRollingFileAppender
# 输出位置
log4j.appender.MyFileError.File = ${user.home}/logs/app.log
# 是否追加到文件
log4j.appender.MyFileError.Append = true
# 输出等级
log4j.appender.MyFileError.Threshold = error
log4j.appender.MyFileError.layout = org.apache.log4j.PatternLayout
log4j.appender.MyFileError.layout.ConversionPattern = %d{ yyyy-MM-dd HH:mm:ss} [%p]:%c: %m%n